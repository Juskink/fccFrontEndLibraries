
const inputStyle = {
  width: 235,
  margin: 5
}

class CheckUserAge extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      input: "",
      userAge: ""
    }
    this.submit = this.submit.bind(this);
    this.handleChange = this.handleChange.bind(this);
  }
  // SEE THAT THE CHANGE EVENT HANDLER CHANGES BOTH THE INPUT AND!!!!!! THE USERAGE EACH TIME THERE IS A KEY STROKE
  handleChange(e) {
    this.setState({
      input: e.target.value,
      userAge: ''
    });
  }
  // THE SUBMIT METHOD ONLY SETS THE USERAGE "BRIEFLY" UNTIL ANOTHER KEYSTROKE IS MADE AND THE HANDLECHANGE EVENTHANDLER TAKES OVER AGAIN
  submit() {
    this.setState({
      userAge: this.state.input
    });
  }
  render() {
    const buttonOne = <button onClick={this.submit}>Submit</button>;
    const buttonTwo = <button>You May Enter</button>;
    const buttonThree = <button>You Shall Not Pass</button>;
    return (
      <div>
        <h3>Enter Your Age to Continue</h3>
        <input
          style={inputStyle}
          type="number"
          value={this.state.input}
          onChange={this.handleChange} /><br />
        { 
        {/* THE TERNARY OPERATOR CHECKS THE TRUTHINESS OF THE USERAGE (0, "", null, undefined, or NaN - ARE FALSE) AND IF IT IS FALSE SHOW BUTTON ONE*/}
          this.state.userAge? (this.state.userAge >=18 ? buttonTwo: buttonThree) : buttonOne
        }
      </div>
    );
  }
};
